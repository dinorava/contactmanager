{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","_this2","className","name","onClick","style","cursor","float","color","bind","react_router_dom","to","marginRight","email","phone","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classNames","is-invalid","defaultProps","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","Header","branding","href","About","NotFound","EditContact","updContact","match","params","put","App","context_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.da246c23.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'DELETE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n      };\r\n    case 'ADD_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case 'UPDATE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id ? (contact = action.payload) : contact\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  /* componentDidMount() {\r\n    axios.get('https://jsonplaceholder.typicode.com/users').then(res =>\r\n      this.setState({\r\n        contacts: res.data\r\n      })\r\n    );\r\n  } */\r\n  async componentDidMount() {\r\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  render() {\r\n    return <Context.Provider value={this.state}>{this.props.children}</Context.Provider>;\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n  };\r\n\r\n  render() {\r\n    const { contact } = this.props;\r\n    //const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {contact.name}\r\n                <i\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo\r\n                    })\r\n                  }\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: 'pointer' }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: 'pointer', float: 'right', color: 'red' }}\r\n                  onClick={this.onDeleteClick.bind(this, contact.id, dispatch)}\r\n                />\r\n                <Link to={`contact/edit/${contact.id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      cursor: 'pointer',\r\n                      float: 'right',\r\n                      color: 'black',\r\n                      marginRight: '1rem'\r\n                    }}\r\n                  />\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">{contact.email}</li>\r\n                  <li className=\"list-group-item\">{contact.phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\"> Contact List </span>\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nconst TextInputGroup = ({ label, name, value, placeholder, type, onChange, error }) => {\r\n  return (\r\n    <div className=\"from-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classNames('form-control form-control-lg', {\r\n          'is-invalid': error\r\n        })}\r\n        //className=\"is-invalid form-control form-control-lg\"\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: 'text'\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport uuid from 'uuid';\r\nimport axios from 'axios';\r\n\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    if (name === '') {\r\n      this.setState({ errors: { name: 'Name is required' } });\r\n      return;\r\n    }\r\n    if (email === '') {\r\n      this.setState({ errors: { email: 'Name is required' } });\r\n      return;\r\n    }\r\n    if (phone === '') {\r\n      this.setState({ errors: { phone: 'Name is required' } });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      //id: uuid(),\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\r\n\r\n    dispatch({ type: 'ADD_CONTACT', payload: res.data });\r\n\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  onChange = e =>\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <div>\r\n                    <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\" />\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\"> Home</i>\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\"> Add</i>\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\"> About</i>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\"> 404 Page Not Found</span>{' '}\r\n      </h1>\r\n      <p className=\"lead\">Sorry, that page does not exist</p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport uuid from 'uuid';\r\nimport axios from 'axios';\r\n\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n    const contact = res.data;\r\n\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    if (name === '') {\r\n      this.setState({ errors: { name: 'Name is required' } });\r\n      return;\r\n    }\r\n    if (email === '') {\r\n      this.setState({ errors: { email: 'Name is required' } });\r\n      return;\r\n    }\r\n    if (phone === '') {\r\n      this.setState({ errors: { phone: 'Name is required' } });\r\n      return;\r\n    }\r\n\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const { id } = this.props.match.params;\r\n    //la response contiene di default l'id\r\n    const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\r\n\r\n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\r\n\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  onChange = e =>\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <div>\r\n                    <input\r\n                      type=\"submit\"\r\n                      value=\"Update Contact\"\r\n                      className=\"btn btn-light btn-block\"\r\n                    />\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React, { Component } from 'react';\nimport Contacts from './components/contacts/Contacts';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport AddContact from './components/contacts/AddContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport EditContact from './components/contacts/EditContact';\n\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}